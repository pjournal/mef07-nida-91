library(dplyr)
df_1 <- read.csv("/Users/nidadonmez/Downloads/trending_yt_videos_113_countries.csv")
df_1 %>%
arrange(desc(view_count)) %>%
filter(snapshot_date == "2023-11-10") %>%
filter(country == "TR") %>%
select(channel_name, view_count, country) %>%
head(10)
head(mtcars, 6)
head(mtcars, 6)
hist(mtcars$hp)
test <- read.csv("~/Downloads/archive/test.csv")
View(test)
df_3 = read.csv(file = 'test.csv')
df_3 <- read.csv(file = 'test.csv')
df_3 <- read.csv(file = 'test.csv')
df3 <- read.csv(file = 'test.csv')
set.seed(123)
x <- rnorm(30)
y <- x + rnorm(30)
plot(density(x))
## Installing dplyr
library(dplyr)
## Importing the dataset
youtube <- read.csv("/Users/nidadonmez/Downloads/trending_yt_videos_113_countries.csv")
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
group_by(country) %>%
filter(snapshot_date == "2023-11-10") %>%
select(country)
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
group_by(country) %>%
filter(snapshot_date == "2023-11-10") %>%
summarise(total_videos = n(), country)
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
filter(snapshot_date == "2023-11-10") %>%
group_by(country) %>%
summarise(total_videos = n(), country)
View(df_1)
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
filter(snapshot_date == "2023-11-10") %>%
group_by(country) %>%
summarise(total_videos = n(title), country)
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
filter(snapshot_date == "2023-11-10") %>%
group_by(country) %>%
select(total_videos = n(title), country)
## To check if the list really contains 50 top videos by taking the total number in randomly selected countries
youtube %>%
filter(snapshot_date == "2023-11-10") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
## Continue the chunk above
```{r}
## Continue the chunk above
youtube %>%
filter(snapshot_date == "2023-10-20") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
## To check if each country and date really contains 50 videos:
youtube %>%
filter(snapshot_date == "2023-11-10") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
## To continue above analysis with another random date:
youtube %>%
filter(snapshot_date == "2023-10-25") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
## To continue above analysis with another random date:
youtube %>%
filter(snapshot_date == "2023-10-20") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
## To continue above analysis with another random date:
youtube %>%
filter(snapshot_date == "2023-11-05") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
youtube %>%
filter(snapshot_date == "2023-11-05") %>%
group_by(total_comment = n(comment_count) %>%
summarise(title, total_comment, .groups = "drop")
head(5)
youtube %>%
filter(snapshot_date == "2023-11-05") %>%
group_by(total_comment = n(comment_count) %>%
summarise(title, total_comment, .groups = "drop") %>%
head(5)
youtube %>%
group_by(total_comment = n(comment_count) %>%
summarise(title, total_comment, .groups = "drop") %>%
head(5)
youtube %>%
summarise(title, total_comment= n(comment_count)) %>%
head(5)
youtube %>%
select(title, total_comment = n(comment_count)) %>%
head(5)
youtube %>%
summarise(title, total_comment = sum(comment_count)) %>%
head(5)
youtube %>%
summarise(total_comment = sum(comment_count)) %>%
select(title, total_comment) %>%
head(5)
youtube %>%
total_comment = sum(comment_count) %>%
select(title, total_comment) %>%
head(5)
youtube %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_likes = sum(view_count), total_comment = sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
## To continue above analysis with another random date:
youtube %>%
filter(snapshot_date == "2023-11-05") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
youtube %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
table <- summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup(table) %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
cbind(cl$total_comment, sapply(cl[,c(2:3)], rank))
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
table <- summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
table = summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count))
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count), rank_comment = rank(total_comments), rank_view = rank(total_views), rank_like = rank(total_likes)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count), rank_comment = rank(sum(comment_count)), rank_view = rank(sum(view_count)), rank_like = rank(sum(like_count))) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(total_comment = sum(comment_count), total_views = sum(view_count), total_likes= sum(like_count), rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(desc(total_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(asc(rank_comment)) %>%
print()
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(asc(rank_comment)) %>%
head(5)
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
reframe(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(asc(rank_comment)) %>%
head(5)
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
reframe(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
order(rank_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
reframe(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(rank_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
reframe(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(rank_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
reframe(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(rank_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
## Still rank based on higher number of comments to check if top ones match. I could have ranked based on the other columns as well.
arrange(rank_comment)) %>%
youtube %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
arrange(rank_comment) %>%
youtube %>%
youtube %>%
youtube  %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
arrange(rank_comment) %>%
## To continue above analysis with another random date:
youtube %>%
filter(snapshot_date == "2023-11-05") %>%
group_by(country) %>%
summarise(total_count =n(), .groups = "drop")
youtube %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube  %>%
group_by(title) %>%
youtube  %>%
group_by(title)
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube  %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube  %>%
group_by(title) %>%
## I include the total of likes and views in my summary table:
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
ungroup %>%
arrange(rank_comment) %>%
youtube  %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
youtube  %>%
group_by(title) %>%
summarise(rank_comment = rank(comment_count), rank_view = rank(view_count), rank_like = rank(like_count)) %>%
arrange(rank_comment)) %>%
youtube  %>%
youtube_1 <-  arrange(title, comments) %>%
group_by(team) %>%
mutate(rank = rank(comments))
youtube  %>%
youtube_1 <-  arrange(title, comments) %>%
group_by(team) %>%
mutate(rank = rank(comments))
youtube  %>%
arrange(title, comments) %>%
group_by(team) %>%
mutate(rank = rank(comments))
youtube  %>%
arrange(title, comment_count) %>%
group_by(team) %>%
mutate(rank = rank(comment?count))
youtube  %>%
arrange(title, comment_count) %>%
group_by(title) %>%
mutate(rank = rank(comment?count))
youtube  %>%
arrange(title, comment_count) %>%
group_by(title) %>%
mutate(rank = rank(comment_count))
youtube  %>%
arrange(title, comment_count) %>%
group_by(title) %>%
mutate(rank_comment = rank(comment_count))
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count)) %>%
ungroup %>%
arrange(desc(total_view)) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), rate_of_likes = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(rate_of_likes)) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), rate_of_likes = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(rate_of_likes)) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), like_engagement = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(like_engagement) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), like_engagement = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(like_engagement) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), like_engagement = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(like_engagement) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), rate_of_likes = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(rate_of_likes) %>%
head(10)
## for the lowest
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), rate_of_likes = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(rate_of_likes)) %>%
head(10)
## for the lowest
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), like_engagement = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(desc(like_engagement)) %>%
head(10)
youtube  %>%
group_by(country) %>%
summarise(total_view = sum(view_count), like_engagement = sum(like_count)/sum(view_count)) %>%
ungroup %>%
arrange(like_engagement) %>%
head(10)
youtube  %>%
group_by(title) %>%
summarise(total_comment = sum(comment_count)) %>%
ungroup %>%
arrange(desc(total_comment)) %>%
head(5)
